---
- name: uninstall old docker version
  ansible.builtin.apt:
    pkg:
      - docker.io
      - docker-doc
      - docker-compose
      - podman-docker
      - containerd
      - runc
    state: absent

- name: install pre-requisites
  ansible.builtin.apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: latest
    update_cache: yes

- name: create keyring
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory

- name: install docker apt key
  ansible.builtin.shell:
    cmd: "curl -fsSL https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg"
    creates: /etc/apt/keyrings/docker.gpg

- name: install docker apt repository
  ansible.builtin.shell:
    cmd: 'echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null'
    creates: /etc/apt/sources.list.d/docker.list

- name: install docker-ce
  ansible.builtin.apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: yes
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

- name: install docker python module
  ansible.builtin.pip:
    name: docker
    executable: pip3

- name: add user to group
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    groups: docker
    append: yes